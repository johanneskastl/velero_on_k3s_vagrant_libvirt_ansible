---

- name: 'Create two PVCs and install two Nginx instances using those PVCs'
  hosts: 'k3s1'
  gather_facts: true
  become: false
  module_defaults:
    kubernetes.core.helm:
      kubeconfig: './k3s-kubeconfig'
    kubernetes.core.k8s:
      kubeconfig: './k3s-kubeconfig'
    kubernetes.core.k8s_info:
      kubeconfig: './k3s-kubeconfig'
    kubernetes.core.k8s_exec:
      kubeconfig: './k3s-kubeconfig'

  tasks:

    #
    # nginx-pvc2
    #

    - name: 'Create PVC nginx-pvc2'
      delegate_to: 'localhost'
      kubernetes.core.k8s:
        state: 'present'
        resource_definition: |
          apiVersion: v1
          kind: PersistentVolumeClaim
          metadata:
            name: nginx-pvc2
            namespace: default
          spec:
            storageClassName: local-path
            accessModes:
              - ReadWriteOnce
            resources:
              requests:
                storage: 100Mi

    - name: 'Install nginx-pvc2'
      delegate_to: 'localhost'
      kubernetes.core.helm:
        chart_ref: 'oci://registry-1.docker.io/bitnamicharts/nginx'
        release_name: 'nginx-pvc2'
        release_namespace: 'default'
        release_values:
          staticSitePVC: 'nginx-pvc2'
          service:
            type: ClusterIP
          ingress:
            enabled: true
            hostname: "nginx-pvc2.{{ hostvars['k3s1']['ansible_default_ipv4']['address'] }}.sslip.io"
          initContainers:
            - name: init-myservice
              image: busybox:1.28
              command: ['sh', '-c', "date > /app/index.html"]
              volumeMounts:
              - mountPath: /app
                name: staticsite

    #
    # nginx-pvc1
    #

    - name: 'Create PVC nginx-pvc1'
      delegate_to: 'localhost'
      kubernetes.core.k8s:
        state: 'present'
        resource_definition: |
          apiVersion: v1
          kind: PersistentVolumeClaim
          metadata:
            name: nginx-pvc1
            namespace: default
          spec:
            storageClassName: local-path
            accessModes:
              - ReadWriteOnce
            resources:
              requests:
                storage: 100Mi

    - name: 'Install nginx-pvc1'
      delegate_to: 'localhost'
      kubernetes.core.helm:
        chart_ref: 'oci://registry-1.docker.io/bitnamicharts/nginx'
        release_name: 'nginx-pvc1'
        release_namespace: 'default'
        release_values:
          staticSitePVC: 'nginx-pvc1'
          service:
            type: ClusterIP
          ingress:
            enabled: true
            hostname: "nginx-pvc1.{{ hostvars['k3s1']['ansible_default_ipv4']['address'] }}.sslip.io"
          initContainers:
            - name: init-myservice
              image: busybox:1.28
              command: ['sh', '-c', "date > /app/index.html"]
              volumeMounts:
              - mountPath: /app
                name: staticsite

    - name: 'Wait until all pods are running'
      delegate_to: 'localhost'
      kubernetes.core.k8s_info:
        api_version: v1
        kind: Pod
        namespace: default
      register: pod_list
      until:
        '
        pod_list | json_query("resources[*].status.phase") | unique | sort == ["Running"]
        or
        pod_list | json_query("resources[*].status.phase") | unique | sort == ["Running", "Succeeded"]
        '
      retries: 12
      delay: 10

    - name: 'Wait for the nginx-pvc1 ingress to be reachable'
      ansible.builtin.uri:
        url: "http://nginx-pvc1.{{ hostvars['k3s1']['ansible_default_ipv4']['address'] }}.sslip.io"
      register: result
      until: "result.status == 302 or result.status == 200"
      retries: 11
      delay: 10

    - name: 'Command to curl the nginx-pvc1 ingress'
      ansible.builtin.debug:
        msg: "The curl command to test the nginx-pvc1 ingress is: curl http://nginx-pvc1.{{ hostvars['k3s1']['ansible_default_ipv4']['address'] }}.sslip.io"
      delegate_to: 'localhost'

    - name: 'Command to curl the nginx-pvc2 ingress'
      ansible.builtin.debug:
        msg: "The curl command to test the nginx-pvc2 ingress is: curl http://nginx-pvc2.{{ hostvars['k3s1']['ansible_default_ipv4']['address'] }}.sslip.io"
      delegate_to: 'localhost'
